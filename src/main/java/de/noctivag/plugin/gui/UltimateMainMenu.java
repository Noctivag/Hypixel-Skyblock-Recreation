package de.noctivag.plugin.gui;
import org.bukkit.inventory.ItemStack;

import de.noctivag.plugin.Plugin;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.inventory.meta.ItemMeta;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import net.kyori.adventure.text.format.TextDecoration;

import java.util.Arrays;

public class UltimateMainMenu extends CustomGUI {
    private final Plugin plugin;
    private final Player player;
    private final HypixelMenuStyleSystem styleSystem;

    public UltimateMainMenu(Plugin plugin, Player player) {
        super(54, Component.text("¬ß6¬ßl‚ö° ULTIMATE MENU ‚ö°").color(NamedTextColor.GOLD).decorate(TextDecoration.BOLD));
        this.plugin = plugin;
        this.player = player;
        this.styleSystem = new HypixelMenuStyleSystem(plugin);
        setupItems();
        playOpenSound();
    }

    private void setupItems() {
        // Setup Hypixel-style border
        styleSystem.setupHypixelBorder(getInventory());
        
        // Header with player info
        setupPlayerHeader();
        
        // Category headers and sections
        setupCoreFeatures();
        setupCombatEvents();
        setupSocialEconomy();
        setupUtilityAdmin();
        setupNewSystems();
        setupHypixelFeatures();
        
        // Navigation footer
        setupNavigationInfo();
    }

    private void setupPlayerHeader() {
        // Use Hypixel-style player header
        styleSystem.setupPlayerHeader(getInventory(), player, 4);
    }

    private void setupCoreFeatures() {
        // Category header
        setItem(10, styleSystem.createCategoryHeader("CORE FEATURES", "Essential player features and tools"));
        
        // Profile
        setItem(11, styleSystem.createFeatureItem(Material.PLAYER_HEAD, "üë§ PROFILE", 
            "View detailed player profile and statistics", true,
            "‚Ä¢ Statistics and progress tracking",
            "‚Ä¢ Achievements and rewards",
            "‚Ä¢ Settings and preferences"));

        // Daily Rewards
        boolean canClaim = false; // DailyRewardSystem not implemented yet
        Material rewardIcon = canClaim ? Material.EMERALD : Material.GRAY_DYE;
        setItem(12, styleSystem.createFeatureItem(rewardIcon, "üéÅ DAILY REWARDS", 
            "Claim your daily rewards and build streaks", canClaim,
            "‚Ä¢ Current streak: 0 days", // DailyRewardSystem not implemented yet
            "‚Ä¢ Bonus rewards for longer streaks",
            "‚Ä¢ Special weekend bonuses"));

        // Achievements
        setItem(13, styleSystem.createFeatureItem(Material.GOLD_INGOT, "üèÜ ACHIEVEMENTS", 
            "View and track your achievement progress", true,
            "‚Ä¢ Completed: 0/100", // AchievementSystem not implemented yet
            "‚Ä¢ Progress tracking and rewards",
            "‚Ä¢ Special achievement categories"));

        // Cosmetics
        setItem(14, styleSystem.createFeatureItem(Material.NETHER_STAR, "‚ú® COSMETICS", 
            "Customize your appearance with cosmetics", true,
            "‚Ä¢ Particle effects and trails",
            "‚Ä¢ Wings and halos",
            "‚Ä¢ Sound effects and animations"));

        // Kits
        setItem(15, styleSystem.createFeatureItem(Material.CHEST, "üì¶ KITS", 
            "Purchase and use various kits", true,
            "‚Ä¢ Different kit categories",
            "‚Ä¢ Cooldowns and pricing",
            "‚Ä¢ Kit management system"));

        // Warps
        setItem(16, styleSystem.createFeatureItem(Material.ENDER_PEARL, "üåç WARPS", 
            "Travel to different server locations", true,
            "‚Ä¢ Public and private warps",
            "‚Ä¢ Warp categories and favorites",
            "‚Ä¢ Quick travel system"));

        // Teleportation
        setItem(17, styleSystem.createFeatureItem(Material.COMPASS, "üß≠ TELEPORTATION", 
            "Advanced teleportation and navigation", true,
            "‚Ä¢ Home system with multiple homes",
            "‚Ä¢ TPA and RTP functionality",
            "‚Ä¢ Teleportation tools and utilities"));

        // Messages
        setItem(18, styleSystem.createFeatureItem(Material.WRITABLE_BOOK, "üí¨ MESSAGES", 
            "Customize join/leave messages", true,
            "‚Ä¢ Custom message templates",
            "‚Ä¢ Presets and themes",
            "‚Ä¢ Message management tools"));
    }

    private void setupCombatEvents() {
        // Category header
        setItem(19, styleSystem.createCategoryHeader("COMBAT & EVENTS", "Fight, compete, and earn rewards"));
        
        // Events & Bosses
        setItem(20, styleSystem.createFeatureItem(Material.DRAGON_HEAD, "‚öîÔ∏è EVENTS & BOSSES", 
            "Participate in events and fight powerful bosses", true,
            "‚Ä¢ 8 different boss types with unique mechanics",
            "‚Ä¢ Automatic event scheduling system",
            "‚Ä¢ Unique rewards and rare drops",
            "‚Ä¢ Advanced arena system"));

        // PvP Arena
        setItem(21, styleSystem.createFeatureItem(Material.DIAMOND_SWORD, "‚öîÔ∏è PVP ARENA", 
            "Fight against other players in competitive matches", true,
            "‚Ä¢ Multiple PvP arena types",
            "‚Ä¢ Rankings and statistics tracking",
            "‚Ä¢ Rewards and prizes for winners"));

        // Mob Arena
        setItem(22, styleSystem.createFeatureItem(Material.ZOMBIE_HEAD, "üëπ MOB ARENA", 
            "Battle against waves of monsters", true,
            "‚Ä¢ Multiple difficulty waves",
            "‚Ä¢ Progressive difficulty scaling",
            "‚Ä¢ Special rewards for completion"));

        // Duel System
        setItem(23, styleSystem.createFeatureItem(Material.IRON_SWORD, "‚öîÔ∏è DUEL SYSTEM", 
            "Challenge other players to 1v1 duels", true,
            "‚Ä¢ 1v1 combat system",
            "‚Ä¢ Various duel modes and rules",
            "‚Ä¢ Ranking and leaderboard system"));

        // Tournament
        setItem(24, styleSystem.createFeatureItem(Material.GOLDEN_SWORD, "üèÜ TOURNAMENT", 
            "Participate in regular tournaments", true,
            "‚Ä¢ Regular tournament events",
            "‚Ä¢ Large prize pools",
            "‚Ä¢ Tournament rankings and rewards"));

        // Battle Pass
        setItem(25, styleSystem.createFeatureItem(Material.BOOK, "üìö BATTLE PASS", 
            "Complete challenges and earn rewards", true,
            "‚Ä¢ Daily and weekly challenges",
            "‚Ä¢ Progressive reward system",
            "‚Ä¢ Premium battle pass features"));

        // Quests
        setItem(26, styleSystem.createFeatureItem(Material.MAP, "üó∫Ô∏è QUESTS", 
            "Complete quests and earn rewards", true,
            "‚Ä¢ Daily quest system",
            "‚Ä¢ Weekly special quests",
            "‚Ä¢ Event-specific quest challenges"));

        // Statistics
        setItem(27, styleSystem.createFeatureItem(Material.PAPER, "üìä STATISTICS", 
            "View your detailed statistics", true,
            "‚Ä¢ Combat and PvP statistics",
            "‚Ä¢ Event participation tracking",
            "‚Ä¢ General gameplay statistics"));

        // Leaderboards
        setItem(28, styleSystem.createFeatureItem(Material.GOLD_BLOCK, "üèÖ LEADERBOARDS", 
            "View server leaderboards and rankings", true,
            "‚Ä¢ Multiple ranking categories",
            "‚Ä¢ Top player displays",
            "‚Ä¢ Personal ranking positions"));
    }

    private void setupSocialEconomy() {
        // Category header
        setItem(29, styleSystem.createCategoryHeader("SOCIAL & ECONOMY", "Connect with players and manage your wealth"));
        
        // Party System
        setItem(30, styleSystem.createFeatureItem(Material.CAKE, "üéâ PARTY SYSTEM", 
            "Create or join parties with other players", true,
            "‚Ä¢ Party creation and management",
            "‚Ä¢ Party events and activities",
            "‚Ä¢ Shared rewards and benefits"));

        // Friends
        setItem(31, styleSystem.createFeatureItem(Material.PLAYER_HEAD, "üë• FRIENDS", 
            "Manage your friends list and social connections", true,
            "‚Ä¢ Add and remove friends",
            "‚Ä¢ Friend status and activity",
            "‚Ä¢ Private messaging system"));

        // Guild System
        setItem(32, styleSystem.createFeatureItem(Material.SHIELD, "üè∞ GUILD SYSTEM", 
            "Join or create guilds for team play", true,
            "‚Ä¢ Guild creation and management",
            "‚Ä¢ Guild wars and competitions",
            "‚Ä¢ Guild benefits and rewards"));

        // Chat Channels
        setItem(33, styleSystem.createFeatureItem(Material.WRITABLE_BOOK, "üí¨ CHAT CHANNELS", 
            "Access different communication channels", true,
            "‚Ä¢ Global and local chat",
            "‚Ä¢ Private channel system",
            "‚Ä¢ Channel moderation tools"));

        // Economy
        setItem(34, styleSystem.createFeatureItem(Material.EMERALD, "üí∞ ECONOMY", 
            "Manage your money and economic activities", true,
            "‚Ä¢ Balance tracking and management",
            "‚Ä¢ Transaction history",
            "‚Ä¢ Economic statistics"));

        // Shop
        setItem(35, styleSystem.createFeatureItem(Material.CHEST, "üõí SHOP", 
            "Purchase various items and services", true,
            "‚Ä¢ Multiple item categories",
            "‚Ä¢ Special offers and sales",
            "‚Ä¢ Shopping cart functionality"));

        // Auction House
        setItem(36, styleSystem.createFeatureItem(Material.GOLD_INGOT, "üè™ AUCTION HOUSE", 
            "Buy and sell items through auctions", true,
            "‚Ä¢ Create and manage auctions",
            "‚Ä¢ Place bids on items",
            "‚Ä¢ Sales history and tracking"));

        // Bank
        setItem(37, styleSystem.createFeatureItem(Material.ENDER_CHEST, "üè¶ BANK", 
            "Secure storage and management of your money", true,
            "‚Ä¢ Account management",
            "‚Ä¢ Interest and investment options",
            "‚Ä¢ Transaction security"));

        // Jobs
        setItem(38, styleSystem.createFeatureItem(Material.DIAMOND_PICKAXE, "üíº JOBS", 
            "Earn money through various job activities", true,
            "‚Ä¢ Multiple job categories",
            "‚Ä¢ Level progression system",
            "‚Ä¢ Job-specific rewards"));
    }

    private void setupNewSystems() {
        // Category header
        setItem(42, styleSystem.createCategoryHeader("ADVANCED SYSTEMS", "Advanced item and system management"));
        
        // Potato Book System
        setItem(43, styleSystem.createFeatureItem(Material.BOOK, "ü•î POTATO BOOKS", 
            "Upgrade armor and weapons with potato books", true,
            "‚Ä¢ Hot Potato Books for stat boosts",
            "‚Ä¢ Fuming Potato Books for enhanced upgrades",
            "‚Ä¢ Stat improvement system"));

        // Recombobulator System
        setItem(44, styleSystem.createFeatureItem(Material.REDSTONE, "üîÆ RECOMBOBULATOR", 
            "Upgrade item rarity and quality", true,
            "‚Ä¢ Item rarity upgrade system",
            "‚Ä¢ Success rate calculations",
            "‚Ä¢ Cost and resource management"));

        // Dungeon Star System
        setItem(45, styleSystem.createFeatureItem(Material.NETHER_STAR, "‚≠ê DUNGEON STARS", 
            "Enhance dungeon items with stars", true,
            "‚Ä¢ 1-5 star upgrade system",
            "‚Ä¢ Dungeon-specific bonuses",
            "‚Ä¢ Essence collection system"));

        // Pet Item System
        setItem(46, styleSystem.createFeatureItem(Material.BONE, "üêæ PET ITEMS", 
            "Enhance and upgrade your pets", true,
            "‚Ä¢ Pet candy for experience",
            "‚Ä¢ Pet food for stat boosts",
            "‚Ä¢ Pet upgrade and evolution system"));
    }

    private void setupUtilityAdmin() {
        // Category header
        setItem(39, styleSystem.createCategoryHeader("UTILITY & ADMIN", "Tools and administrative functions"));
        
        // Settings
        setItem(40, styleSystem.createFeatureItem(Material.REDSTONE, "‚öôÔ∏è SETTINGS", 
            "Configure plugin settings and preferences", true,
            "‚Ä¢ Feature toggles and options",
            "‚Ä¢ Notification preferences",
            "‚Ä¢ Personal customization settings"));

        // Admin Panel
        setItem(41, styleSystem.createFeatureItem(Material.COMMAND_BLOCK, "üëë ADMIN PANEL", 
            "Access administrative tools and controls", player.hasPermission("basics.admin"),
            "‚Ä¢ Player management tools",
            "‚Ä¢ Server administration",
            "‚Ä¢ Plugin configuration"));
    }

    private void setupHypixelFeatures() {
        // Category header
        setItem(47, styleSystem.createCategoryHeader("HYPIXEL FEATURES", "Special Hypixel Skyblock-style features"));
        
        // Booster Cookie
        setItem(48, styleSystem.createFeatureItem(Material.COOKIE, "üç™ BOOSTER COOKIE", 
            "Temporary bonuses and enhancements", true,
            "‚Ä¢ +25% Mining Speed boost",
            "‚Ä¢ +20% Combat Damage increase",
            "‚Ä¢ +50% Magic Find enhancement",
            "‚Ä¢ 4-day duration with multiple bonuses"));

        // Recipe Book
        setItem(49, styleSystem.createFeatureItem(Material.BOOK, "üìñ RECIPE BOOK", 
            "Discover and view item recipes", true,
            "‚Ä¢ Weapon and armor recipes",
            "‚Ä¢ Tool and accessory recipes",
            "‚Ä¢ Pet and special item recipes",
            "‚Ä¢ Progress tracking system"));
    }

    private void setupNavigationInfo() {
        // Event Schedule
        setItem(47, styleSystem.createFeatureItem(Material.CLOCK, "‚è∞ EVENT SCHEDULE", 
            "View upcoming events and schedules", true,
            "‚Ä¢ Next events and timers",
            "‚Ä¢ Event history and participation",
            "‚Ä¢ Special event notifications"));

        // Server Info
        setItem(48, styleSystem.createFeatureItem(Material.BEACON, "üñ•Ô∏è SERVER INFO", 
            "View server information and statistics", true,
            "‚Ä¢ Online players: " + plugin.getServer().getOnlinePlayers().size(),
            "‚Ä¢ Server TPS and performance",
            "‚Ä¢ Uptime and status"));

        // Quick Actions
        setItem(49, styleSystem.createFeatureItem(Material.NETHER_STAR, "‚ö° QUICK ACTIONS", 
            "Access quick actions and shortcuts", true,
            "‚Ä¢ Teleport to spawn",
            "‚Ä¢ Sort inventory",
            "‚Ä¢ Quick commands"));

        // Navigation footer
        styleSystem.setupNavigationFooter(getInventory(), 50, false, false);
    }

    // Removed setupDecorativeBorders - now handled by HypixelMenuStyleSystem

    private void playOpenSound() {
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.5f, 1.0f);
    }

    private String getServerUptime() {
        long uptime = System.currentTimeMillis() - (System.currentTimeMillis() - 1000 * 60 * 60); // Placeholder
        long hours = uptime / (1000 * 60 * 60);
        long minutes = (uptime % (1000 * 60 * 60)) / (1000 * 60);
        return hours + "h " + minutes + "m";
    }

    public void setItem(int slot, Material material, String name, String... lore) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        
        if (meta != null) {
            meta.displayName(Component.text(name));
            if (lore.length > 0) {
                meta.lore(Arrays.stream(lore).map(Component::text).toList());
            }
            item.setItemMeta(meta);
        }
        
        getInventory().setItem(slot, item);
    }
}
