package de.noctivag.skyblock.gui;
import org.bukkit.inventory.ItemStack;

import de.noctivag.skyblock.Plugin;
import de.noctivag.skyblock.items.PotatoBookSystem;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.meta.ItemMeta;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import net.kyori.adventure.text.format.TextDecoration;

import java.util.Arrays;
import java.util.List;

public class PotatoBookGUI extends CustomGUI {
    private final SkyblockPlugin plugin;
    private final Player player;
    private final PotatoBookSystem potatoBookSystem;

    public PotatoBookGUI(SkyblockPlugin plugin, Player player) {
        super(54, Component.text("ยง6ยงl๐ฅ Potato Book System ๐ฅ").color(NamedTextColor.GOLD).decorate(TextDecoration.BOLD));
        this.plugin = plugin;
        this.player = player;
        this.potatoBookSystem = null; // PotatoBookSystem not implemented yet
        setupItems();
    }

    private void setupItems() {
        // Header
        setupHeader();
        
        // Hot Potato Books Section
        setupHotPotatoBooks();
        
        // Fuming Potato Books Section
        setupFumingPotatoBooks();
        
        // Statistics Section
        setupStatistics();
        
        // Navigation
        setupNavigation();
        
        // Decorative borders
        setupDecorativeBorders();
    }

    private void setupHeader() {
        ItemStack header = new ItemStack(Material.BOOK);
        ItemMeta meta = header.getItemMeta();
        
        if (meta != null) {
            meta.displayName(Component.text("ยง6ยงl๐ฅ Potato Book System").color(NamedTextColor.GOLD).decorate(TextDecoration.BOLD));
            
            List<Component> lore = Arrays.asList(
                Component.text("ยง7Upgrade your armor and weapons"),
                Component.text("ยง7with Potato Books!"),
                Component.text(""),
                Component.text("ยง7โข Hot Potato Books: ยงa+10% Stats"),
                Component.text("ยง7โข Fuming Potato Books: ยงd+15% Stats"),
                Component.text(""),
                Component.text("ยงeClick on items to upgrade them!")
            );
            meta.lore(lore);
            header.setItemMeta(meta);
        }
        getInventory().setItem(4, header);
    }

    private void setupHotPotatoBooks() {
        // Hot Potato Book Info
        setItem(10, Material.BOOK, "ยง6ยงl๐ Hot Potato Book", 
            "ยง7Increases item stats by 10%",
            "ยง7โข Can be applied up to 10 times",
            "ยง7โข Success rate: 100%",
            "ยง7โข Cost: Free",
            "",
            "ยงeRight-click to apply!");

        // Create Hot Potato Book
        setItem(11, Material.BOOK, "ยง6ยงlโ Create Hot Potato Book", 
            "ยง7Create a new Hot Potato Book",
            "ยง7โข Cost: ยงa100 coins",
            "ยง7โข Used for armor/weapon upgrades",
            "",
            "ยงeClick to create!");

        // Hot Potato Book Statistics
        PotatoBookSystem.PlayerPotatoBooks playerBooks = potatoBookSystem.getPlayerPotatoBooks(player.getUniqueId());
        setItem(12, Material.PAPER, "ยง6ยงl๐ Hot Potato Statistics", 
            "ยง7Your Hot Potato Book usage:",
            "ยง7โข Total applied: ยงa" + playerBooks.getTotalHotPotatoBooks(),
            "ยง7โข Success rate: ยงa" + String.format("%.1f", playerBooks.getSuccessRate()) + "%",
            "ยง7โข Failed applications: ยงc" + playerBooks.getFailedApplications(),
            "",
            "ยงeClick to view details!");
    }

    private void setupFumingPotatoBooks() {
        // Fuming Potato Book Info
        setItem(19, Material.ENCHANTED_BOOK, "ยงdยงl๐ Fuming Potato Book", 
            "ยง7Increases item stats by 15%",
            "ยง7โข Requires 10 Hot Potato Books first",
            "ยง7โข Can be applied up to 10 times",
            "ยง7โข Success rate: 100%",
            "",
            "ยงeRight-click to apply!");

        // Create Fuming Potato Book
        setItem(20, Material.ENCHANTED_BOOK, "ยงdยงlโ Create Fuming Potato Book", 
            "ยง7Create a new Fuming Potato Book",
            "ยง7โข Cost: ยงa500 coins",
            "ยง7โข Used for advanced upgrades",
            "",
            "ยงeClick to create!");

        // Fuming Potato Book Statistics
        PotatoBookSystem.PlayerPotatoBooks playerBooks = potatoBookSystem.getPlayerPotatoBooks(player.getUniqueId());
        setItem(21, Material.PAPER, "ยงdยงl๐ Fuming Potato Statistics", 
            "ยง7Your Fuming Potato Book usage:",
            "ยง7โข Total applied: ยงd" + playerBooks.getTotalFumingPotatoBooks(),
            "ยง7โข Success rate: ยงa" + String.format("%.1f", playerBooks.getSuccessRate()) + "%",
            "ยง7โข Failed applications: ยงc" + playerBooks.getFailedApplications(),
            "",
            "ยงeClick to view details!");
    }

    private void setupStatistics() {
        // Overall Statistics
        PotatoBookSystem.PlayerPotatoBooks playerBooks = potatoBookSystem.getPlayerPotatoBooks(player.getUniqueId());
        setItem(28, Material.GOLD_INGOT, "ยง6ยงl๐ Overall Statistics", 
            "ยง7Your Potato Book usage:",
            "ยง7โข Total Hot Potato Books: ยงa" + playerBooks.getTotalHotPotatoBooks(),
            "ยง7โข Total Fuming Potato Books: ยงd" + playerBooks.getTotalFumingPotatoBooks(),
            "ยง7โข Total successful: ยงa" + playerBooks.getSuccessfulApplications(),
            "ยง7โข Total failed: ยงc" + playerBooks.getFailedApplications(),
            "ยง7โข Overall success rate: ยงa" + String.format("%.1f", playerBooks.getSuccessRate()) + "%",
            "",
            "ยงeClick to view detailed stats!");

        // Upgrade Guide
        setItem(29, Material.BOOK, "ยงbยงl๐ Upgrade Guide", 
            "ยง7How to upgrade items:",
            "ยง7โข 1. Apply Hot Potato Books (up to 10)",
            "ยง7โข 2. Apply Fuming Potato Books (up to 10)",
            "ยง7โข 3. Use Recombobulator for rarity",
            "ยง7โข 4. Add Dungeon Stars for dungeons",
            "",
            "ยงeClick to view full guide!");

        // Cost Calculator
        setItem(30, Material.PAPER, "ยงeยงl๐งฎ Cost Calculator", 
            "ยง7Calculate upgrade costs:",
            "ยง7โข Hot Potato Books: ยงa100 coins each",
            "ยง7โข Fuming Potato Books: ยงa500 coins each",
            "ยง7โข Total for full upgrade: ยงa6,000 coins",
            "",
            "ยงeClick to calculate!");
    }

    private void setupNavigation() {
        // Back to Main Menu
        setItem(45, Material.ARROW, "ยง7ยงlโฌ๏ธ Back to Main Menu", 
            "ยง7Return to the main menu",
            "",
            "ยงeClick to go back!");

        // Close
        setItem(49, Material.BARRIER, "ยงcยงlโ Close", 
            "ยง7Close this menu",
            "",
            "ยงeClick to close!");

        // Refresh
        setItem(51, Material.EMERALD, "ยงaยงl๐ Refresh", 
            "ยง7Refresh this menu",
            "",
            "ยงeClick to refresh!");
    }

    private void setupDecorativeBorders() {
        // Top border
        for (int i = 0; i < 9; i++) {
            setItem(i, Material.GRAY_STAINED_GLASS_PANE, "ยง7", "");
        }
        
        // Side borders
        for (int i = 9; i < 54; i += 9) {
            setItem(i, Material.GRAY_STAINED_GLASS_PANE, "ยง7", "");
        }
        for (int i = 17; i < 54; i += 9) {
            setItem(i, Material.GRAY_STAINED_GLASS_PANE, "ยง7", "");
        }
        
        // Bottom border
        for (int i = 45; i < 54; i++) {
            if (i != 49) { // Don't override close button
                setItem(i, Material.GRAY_STAINED_GLASS_PANE, "ยง7", "");
            }
        }
    }

    public void setItem(int slot, Material material, String name, String... lore) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        
        if (meta != null) {
            meta.displayName(Component.text(name));
            if (lore.length > 0) {
                meta.lore(Arrays.stream(lore).map(Component::text).toList());
            }
            item.setItemMeta(meta);
        }
        
        getInventory().setItem(slot, item);
    }
}
